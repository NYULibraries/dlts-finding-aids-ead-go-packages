package ead

// Based on: "Data model for parsing EAD <archdesc> elements": https://jira.nyu.edu/jira/browse/FADESIGN-29
// ...using code generated by zek against https://github.com/nyudlts/samplesFromWeatherly/tree/216c4aab0eae53c1c06a1433b357b1d7df933bd6/FADESIGN-3
// as a starting point for non-<archdesc> elements.

const (
	Version = "0.1.0"
)

type EAD struct {
	XMLNS          string `xml:"xmlns,attr" json:"xmlns,attr,omitempty"`
	XLink          string `xml:"xlink,attr" json:"xlink,attr,omitempty"`
	XSI            string `xml:"xsi,attr" json:"xsi,attr,omitempty"`
	SchemaLocation string `xml:"schemaLocation,attr" json:"schemaLocation,attr,omitempty"`
	NS2            string `xml:"ns2,attr" json:"ns2,attr,omitempty"`
	EADHeader      struct {
		CountryEncoding    string `xml:"countryencoding,attr" json:"countryencoding,attr,omitempty"`
		DateEncoding       string `xml:"dateencoding,attr" json:"dateencoding,attr,omitempty"`
		FindAidStatus      string `xml:"findaidstatus,attr" json:"findaidstatus,attr,omitempty"`
		LangEncoding       string `xml:"langencoding,attr" json:"langencoding,attr,omitempty"`
		RepositoryEncoding string `xml:"repositoryencoding,attr" json:"repositoryencoding,attr,omitempty"`
		EADID              struct {
			Value          string `xml:",chardata" json:"value,chardata,omitempty"`
			CountryCode    string `xml:"countrycode,attr" json:"countrycode,attr,omitempty"`
			MainAgencyCode string `xml:"mainagencycode,attr" json:"mainagencycode,attr,omitempty"`
			URL            string `xml:"url,attr" json:"url,attr,omitempty"`
		} `xml:"eadid" json:"eadid,omitempty"`
		FileDesc struct {
			TitleStmt struct {
				TitleProper struct {
					Value string   `xml:",chardata" json:"value,chardata,omitempty"`
					Num   string   `xml:"num" json:"num,omitempty"`
					Emph  []*Emph  `xml:"emph" json:"emph,omitempty"`
					Lb    []string `xml:"lb" json:"lb,omitempty"`
				} `xml:"titleproper" json:"titleproper,omitempty"`
				Author  string `xml:"author" json:"author,omitempty"`
				Sponsor string `xml:"sponsor" json:"sponsor,omitempty"`
			} `xml:"titlestmt" json:"titlestmt,omitempty"`
			PublicationStmt struct {
				Publisher string `xml:"publisher" json:"publisher,omitempty"`
				P         *P     `xml:"p" json:"p,omitempty"`
				Address   struct {
					AddressLine []struct {
						Value  string `xml:",chardata" json:"value,chardata,omitempty"`
						ExtPtr struct {
							Href  string `xml:"href,attr" json:"href,attr,omitempty"`
							Show  string `xml:"show,attr" json:"show,attr,omitempty"`
							Title string `xml:"title,attr" json:"title,attr,omitempty"`
							Type  string `xml:"type,attr" json:"type,attr,omitempty"`
						} `xml:"extptr" json:"extptr,omitempty"`
					} `xml:"addressline" json:"addressline,omitempty"`
				} `xml:"address" json:"address,omitempty"`
			} `xml:"publicationstmt" json:"publicationstmt,omitempty"`
			EditionStmt struct {
				P *P `xml:"p" json:"p,omitempty"`
			} `xml:"editionstmt" json:"editionstmt,omitempty"`
		} `xml:"filedesc" json:"filedesc,omitempty"`
		ProfileDesc struct {
			Creation struct {
				Value string `xml:",chardata" json:"value,chardata,omitempty"`
				Date  string `xml:"date" json:"date,omitempty"`
			} `xml:"creation" json:"creation,omitempty"`
			LangUsage string `xml:"langusage" json:"langusage,omitempty"`
			DescRules string `xml:"descrules" json:"descrules,omitempty"`
		} `xml:"profiledesc" json:"profiledesc,omitempty"`
		RevisionDesc struct {
			Change []struct {
				Audience string `xml:"audience,attr" json:"audience,attr,omitempty"`
				Date     string `xml:"date" json:"date,omitempty"`
				Item     string `xml:"item" json:"item,omitempty"`
			} `xml:"change" json:"change,omitempty"`
		} `xml:"revisiondesc" json:"revisiondesc,omitempty"`
	} `xml:"eadheader" json:"eadheader,omitempty"`
	ArchDesc *ArchDesc `xml:"archdesc" json:"archdesc,omitempty"`
}

// https://jira.nyu.edu/jira/browse/FADESIGN-29 additions
type Abstract struct {
	Value string `xml:",chardata" json:"value,chardata,omitempty"`
}

type ArchDesc struct {
	AcqInfo        *FormattedNoteWithHeader `xml:"acqinfo" json:"acqinfo,omitempty"`
	DID            *DID                     `xml:"did" json:"did,omitempty"`
	DSC            *DSC                     `xml:"dsc" json:"dsc,omitempty"`
	ScopeContent   *FormattedNoteWithHeader `xml:"scopecontent" json:"scopecontent,omitempty"`
	BiogHist       *FormattedNoteWithHeader `xml:"bioghist" json:"bioghist,omitempty"`
	AccessRestrict *FormattedNoteWithHeader `xml:"accessrestrict" json:"accessrestrict,omitempty"`
	UserRestrict   *FormattedNoteWithHeader `xml:"userestrict" json:"userestrict,omitempty"`
	PreferCite     []*FormattedNoteWithHeader            `xml:"prefercite" json:"prefercite,omitempty"`
	ProcessInfo    *FormattedNoteWithHeader `xml:"processinfo" json:"processinfo,omitempty"`
	Arrangement    *FormattedNoteWithHeader `xml:"arrangement" json:"arrangement,omitempty"`
	ControlAccess  *ControlAccess           `xml:"controlaccess" json:"controlaccess,omitempty"`
}

type C struct {
	// Not in FADESIGN-29 model, but including it for debugging
	AcqInfo        *FormattedNoteWithHeader `xml:"acqinfo,omitempty" json:"acqinfo,omitempty"`
	C              []*C                     `xml:"c,omitempty" json:"c,omitempty"`
	DID            *DID                     `xml:"did,omitempty" json:"did,omitempty"`
	ScopeContent   *FormattedNoteWithHeader `xml:"scopecontent,omitempty" json:"scopecontent,omitempty"`
	BiogHist       *FormattedNoteWithHeader `xml:"bioghist,omitempty" json:"bioghist,omitempty"`
	AccessRestrict *FormattedNoteWithHeader `xml:"accessrestrict,omitempty" json:"accessrestrict,omitempty"`
	UserRestrict   *FormattedNoteWithHeader `xml:"userrestrict,omitempty" json:"userrestrict,omitempty"`
	PreferCite     *FormattedNoteWithHeader `xml:"prefercite,omitempty" json:"prefercite,omitempty"`
	ProcessInfo    *FormattedNoteWithHeader `xml:"processinfo,omitempty" json:"processinfo,omitempty"`
	Arrangement    *FormattedNoteWithHeader `xml:"arrangement,omitempty" json:"arrangement,omitempty"`
	DSC            *DSC                     `xml:"dsc,omitempty" json:"dsc,omitempty"`
	Level          string                   `xml:"level,attr" json:"level,attr,omitempty"`
}

type ControlAccess struct {
	GenreForm  []*GenreForm `xml:"genreform" json:"genreform,omitempty"`
	GeogName   []*GeogName  `xml:"geogname" json:"geogname,omitempty"`
	PersName   []*PersName  `xml:"persname" json:"persname,omitempty"`
	Subject    []*Subject   `xml:"subject" json:"subject,omitempty"`
	CorpName   []*CorpName  `xml:"corpname" json:"corpname,omitempty"`
	Occupation *Occupation  `xml:"occupation" json:"occupation,omitempty"`
}

type CorpName struct {
	Value    string `xml:",chardata" json:"value,chardata,omitempty"`
	Source   string `xml:"source,attr" json:"source,attr,omitempty"`
	Audience string `xml:"audience,attr" json:"audience,attr,omitempty"`
	Rules    string `xml:"rules,attr" json:"rules,attr,omitempty"`
	Role     string `xml:"role,attr" json:"role,attr,omitempty"`
}

type DID struct {
	Abstract     *Abstract     `xml:"abstract" json:"abstract,omitempty"`
	LangMaterial *LangMaterial `xml:"langmaterial" json:"langmaterial,omitempty"`
	Origination  *Origination  `xml:"origination" json:"origination,omitempty"`
	PhysDesc     *PhysDesc     `xml:"physdesc" json:"physdesc,omitempty"`
	PhysLoc      *PhysLoc      `xml:"physloc" json:"physloc,omitempty"`
	Repository   *Repository   `xml:"repository" json:"repository,omitempty"`
	UnitTitle    *UnitTitle    `xml:"unittitle" json:"unittitle,omitempty"`
	UnitID       *UnitID       `xml:"unitid" json:"unitid,omitempty"`
	UnitDate     *UnitDate     `xml:"unitdate" json:"unitdate,omitempty"`
}

type DSC struct {
	C []*C `xml:"c,omitempty" json:"c,omitempty"`
}

type Emph struct {
	Value  string `xml:",chardata" json:"value,chardata,omitempty"`
	Render string `xml:"render,attr" json:"render,attr,omitempty"`
}

// "eadnote" in current draft of the data model
type FormattedNoteWithHeader struct {
	Head string `xml:"head,omitemtpy" json:"head,omitempty"`
	P    *P     `xml:"p,omitempty" json:"p,omitempty"`
}

type GenreForm struct {
	Value  string `xml:",chardata" json:"value,chardata,omitempty"`
	Source string `xml:"source,attr" json:"source,attr,omitempty"`
}

type GeogName struct {
	Value  string `xml:",chardata" json:"value,chardata,omitempty"`
	Source string `xml:"source,attr" json:"source,attr,omitempty"`
}

type LangMaterial struct {
	Value string `xml:",chardata" json:"value,chardata,omitempty"`
}

type Occupation struct {
	Value  string `xml:",chardata" json:"value,chardata,omitempty"`
	Source string `xml:"source,attr" json:"source,attr,omitempty"`
}

type Origination struct {
	PersName *PersName `xml:"persname" json:"persname,omitempty"`
}

type P struct {
	Value string `xml:",chardata" json:"value,chardata,omitempty"`
	Date  string `xml:"date" json:"date,omitempty"`
}

type PersName struct {
	Value    string `xml:",chardata" json:"value,chardata,omitempty"`
	Audience string `xml:"audience,attr" json:"audience,attr,omitempty"`
	Source   string `xml:"source,attr" json:"source,attr,omitempty"`
	Rules    string `xml:"rules,attr" json:"rules,attr,omitempty"`
	Role     string `xml:"role,attr" json:"role,attr,omitempty"`
}

type PhysDesc struct {
	Extent struct {
		Value string `xml:",chardata" json:"value,chardata,omitempty"`
	} `xml:"extent" json:"extent,omitempty"`
}

type PhysLoc struct {
	Value string `xml:",chardata" json:"value,chardata,omitempty"`
}

type Repository struct {
	CorpName *CorpName `xml:"corpname" json:"corpname,omitempty"`
	Emph     []*Emph   `xml:"emph" json:"emph,omitempty"`
}

type Subject struct {
	Value  string `xml:",chardata" json:"value,chardata,omitempty"`
	Source string `xml:"source,attr" json:"source,attr,omitempty"`
}

type UnitDate struct {
	Value string `xml:",chardata" json:"value,chardata,omitempty"`
}

type UnitID struct {
	Value string `xml:",chardata" json:"value,chardata,omitempty"`
}

type UnitTitle struct {
	Value string `xml:",chardata" json:"value,chardata,omitempty"`
}
